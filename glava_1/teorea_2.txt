============================================================================
УРОК 17
Ошибка через  встроенный интерфейс error  УРОК 17
1) Пример при проверке 
if number < 0 {
		return 0, errors.New("число должно быть положительным")
	}
	return number, nil // nil, указывая на отсутствие ошибки
}

============================================================================
УРОК 18 
2)Горутины (goroutines) — это ключевая особенность языка программирования Go, которая обеспечивает легковесную конкурентность. 
Они позволяют выполнять функции одновременно с другими функциями, работая в том же адресном пространстве. Пример УРОК 18 

Так же можно задать тоймаут и используется для того, чтобы дать горутине время выполниться. 
В реальных приложениях обычно используются более изящные методы синхронизации, такие как каналы или sync.WaitGroup.

Задержка: time.Sleep(1 * time.Second)   -  задержка на 1 секунду 
============================================================================
УРОК 19 strconv
В Go стандартная библиотека strconv предоставляет функции для преобразования строк в базовые типы данных и обратно.

1)Преобразование строк в числа:
Atoi(s string) (int, error): Преобразует строку в целое число (int).
ParseInt(s string, base int, bitSize int) (i int64, err error): Преобразует строку в целое число с указанным основанием и размером.
ParseFloat(s string, bitSize int) (float64, error): Преобразует строку в число с плавающей точкой (float64).

2)Преобразование чисел в строки:
Itoa(i int) string: Преобразует целое число (int) в строку.
FormatInt(i int64, base int) string: Преобразует целое число в строку с указанным основанием.
FormatFloat(f float64, fmt byte, prec, bitSize int) string: Преобразует число с плавающей точкой в строку с заданным форматом и точностью.

3)Преобразование строк в булевы значения:
ParseBool(str string) (bool, error): Преобразует строку в булево значение (bool).

4)Преобразование булевых значений в строки:
FormatBool(b bool) string: Преобразует булево значение в строку.